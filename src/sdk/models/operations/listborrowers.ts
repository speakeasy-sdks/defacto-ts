/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ListBorrowersRequest extends SpeakeasyBase {
    /**
     * UUID(s) of the borrower(s) in Defacto API.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=borrower_id" })
    borrowerId?: string[];

    /**
     * Legal identifier of the business, such as its SIREN in France.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=borrower_identifier" })
    borrowerIdentifier?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=cursor" })
    cursor?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page_size" })
    pageSize?: number;
}

export class ListBorrowersResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
